clc, clear all, close all;

%Variables
w = 3;
a = 0.05;
b = 5;
c = 100;

%Matrices siendo x1=alpha x2=phi x3=phi_p x4=h

Mat_A = [-a    a   0 0; 
          0    0   1 0; 
         w^2 -w^2  0 0; 
          c    0   0 0];

Mat_B = [0; 0; b*w^2; 0];

Mat_C = [0 0 0 1];

%Matriz identidad
Mat_I = [1 0 0 0; 
         0 1 0 0; 
         0 0 1 0; 
         0 0 0 1];

%Calculo del controlador. Dise침o por Ackerman, posicionamiento de polos
%Polos dados
p1 = -15+15i;
p2 = -15-15i;
p3 = -0.5+0.5i;
p4 = -0.5-0.5i;

%Calculo de la Ecuacion caracteristica de lazo cerrado
s = tf('s');
Ec = ((s-p1)*(s-p2)*(s-p3)*(s-p4));
% Ec1 = expand((s-p1)*(s-p2)*(s-p3)*(s-p4));
phi_A = (Mat_A^4) + (31*(Mat_A^3)) + (480.5*(Mat_A^2)) + (465*Mat_A) + 225*Mat_I;

%Calculo Matriz M
Mat_M = [Mat_B Mat_A*Mat_B Mat_A*Mat_A*Mat_B Mat_A*Mat_A*Mat_A*Mat_B];

%Controlador
K = [0 0 0 1]*inv(Mat_M)*phi_A;

%G para referencia distinta de 0:
G = -inv(Mat_C*inv(Mat_A-Mat_B*K)*Mat_B);

%C치lculo del observador
%Polos dados
P1o = -50;
P2o = -30;
P3o = -1+i;
P4o = -1-i;

%Matrices
Mat_AO = Mat_A';
Mat_BO = Mat_C';
Mat_CO = Mat_B';

Mat_M_Dual = [Mat_BO  Mat_AO*Mat_BO  Mat_AO^2*Mat_BO  Mat_AO^3*Mat_BO];

alfa_io=poly([P1o P2o P3o P4o]);
poly_A = poly(Mat_A);

Mat_W = [poly_A(4) poly_A(3) poly_A(2) 1;
         poly_A(3) poly_A(2) 1         0;
         poly_A(2) 1         0         0;
         1         0         0         0];
     
Mat_TO = Mat_M_Dual*Mat_W;

KO = (fliplr(alfa_io(2:end)-poly_A(2:end))*inv(Mat_TO))

%Simulacion
deltat = 10^-3;
ts = 70;
pasos = ts/deltat;

Ci = [0 0 0 500];
t = 0:deltat:(ts-deltat);
ref = -100;

x = zeros(4,pasos);
x(1,1) = Ci(1);
x(2,1) = Ci(2);
x(3,1) = Ci(3);
x(4,1) = Ci(4);

x_compar = zeros(4,pasos);
x_compar(1,1) = Ci(1);
x_compar(2,1) = Ci(2);
x_compar(3,1) = Ci(3);
x_compar(4,1) = Ci(4);

x_hat=zeros(4,pasos);
x_hat(1,1) = 0;
x_hat(2,1) = 0;
x_hat(3,1) = 0;
x_hat(4,1) = 0;

u(1) = 0;
u_compar(1) = 0;

for i = 2:1:pasos
    x_actual = x(:,i-1);
    x_hat_actual = x_hat(:,i-1);
    u_actual = -K(1:3)*x_hat_actual(1:3)-K(4)*x_actual(4)+ref*G;
    u = [u u_actual];
    
    x_p_actual = Mat_A*x_actual+Mat_B*u_actual;
    x_sig = x_actual+deltat*x_p_actual;
    x(:,i) = x_sig;
    
    y_actual = Mat_C*x_actual;
    y_hat_actual = Mat_C*x_hat_actual;
    e = y_actual-y_hat_actual;
    
    x_hat_p = e*KO'+Mat_A*x_hat_actual+Mat_B*u_actual;
    
    x_hat_sig = x_hat_actual+deltat*x_hat_p;
    x_hat(:,i) = x_hat_sig;
    
    %Sist. sin observador para comparar
    x_actual_compar = x_compar(:,i-1);
    u_actual_compar = -K*x_actual_compar+ref*G;
    u_compar = [u_compar u_actual_compar];
    
    x_p_actual_compar = Mat_A*x_actual_compar+Mat_B*u_actual_compar;
    x_sig_compar = x_actual_compar+deltat*x_p_actual_compar;
    x_compar(:,i) = x_sig_compar;
end

ref = ref*ones(1,pasos);

figure(1)
%Graficas sin observador
subplot(3,2,1);plot(t,x_compar(4,:),'b'); hold on; 
plot(t,ref,'k'); grid on; title('Altura');
xlabel('Tiempo'); legend({'Sin observador','Referencia'},'Location','southeast')

subplot(3,2,2); plot(t,x_compar(1,:),'b'); hold on; grid on; title('Alpha');
xlabel('Tiempo'); legend({'Sin observador'},'Location','southeast')

subplot(3,2,3); plot(t,x_compar(2,:),'b'); hold on;  grid on; title('Phi');
xlabel('Tiempo'); legend({'Sin observador'},'Location','southeast')

subplot(3,2,4); plot(t,x_compar(3,:),'b'); hold on; grid on; title('Phi punto');
xlabel('Tiempo'); legend({'Sin observador'},'Location','southeast')

subplot(3,2,[5,6]); plot(t,u_compar,'b'); hold on; grid on; title('Acci칩n de control');
xlabel('Tiempo'); legend({'Sin observador'},'Location','southeast')

% %Graficas comparando observador y sin observador
% subplot(3,2,1); plot(t,x(4,:),'r'); hold on;
% plot(t,x_compar(4,:),'b'); plot(t,ref,'k'); grid on; title('Altura');
% xlabel('Tiempo'); legend({'Con observador','Sin observador','Referencia'},'Location','southeast')
% 
% subplot(3,2,2); plot(t,x(1,:),'r'); hold on;
% plot(t,x_compar(1,:),'b'); grid on; title('Alpha');
% xlabel('Tiempo'); legend({'Con observador','Sin observador'},'Location','southeast')
% 
% subplot(3,2,3); plot(t,x(2,:),'r'); hold on;
% plot(t,x_compar(2,:),'b'); grid on; title('Phi');
% xlabel('Tiempo'); legend({'Con observador','Sin observador'},'Location','southeast')
% 
% subplot(3,2,4); plot(t,x(3,:),'r'); hold on;
% plot(t,x_compar(3,:),'k'); grid on; title('Phi punto');
% xlabel('Tiempo'); legend({'Con observador','Sin observador'},'Location','southeast')
% 
% subplot(3,2,[5,6]); plot(t,u,'r'); hold on;
% plot(t,u_compar,'b'); grid on; title('Acci칩n de control');
% xlabel('Tiempo'); legend({'Con observador','Sin observador'},'Location','southeast')
